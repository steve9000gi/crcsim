<project xmlns="http://maven.apache.org/POM/4.0.0"
	 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  
  <modelVersion>4.0.0</modelVersion>
  <artifactId>population</artifactId>
  <version>1.0-SNAPSHOT</version>

  <parent>
    <groupId>epi</groupId>
    <artifactId>common</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <packaging>jar</packaging>
  <name>${project.groupId}-${project.artifactId}</name>
  <url>http://maven.apache.org</url>
  
  <dependencies>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>util</artifactId>
      <version>${project.version}</version>
    </dependency>    
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>geography</artifactId>
      <version>${project.version}</version>
    </dependency>    

<!--
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-shapefile</artifactId>
      <version>${geotools.version}</version>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-swing</artifactId>
      <version>${geotools.version}</version>
    </dependency>
-->

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${org.springframework.version}</version>
    </dependency>    
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>org.springframework.test</artifactId>
      <version>${org.springframework.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit</groupId>
      <artifactId>com.springsource.org.junit</artifactId>
      <version>${junit.springsource.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.sf.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>${net.sf.opencsv.version}</version>
    </dependency>
    <dependency>
      <groupId>org.xerial</groupId>
      <artifactId>sqlite-jdbc</artifactId>
      <version>${xerial.sqlite.jdbc.driver.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
      <version>${commons.dbcp.version}</version>
    </dependency>

  </dependencies>

  <build>
    <plugins>

      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-surefire-plugin</artifactId>
	<version>2.12.2</version>
	<configuration>
	  <argLine>-Xmx128m -server</argLine>
	</configuration>
      </plugin>

      <!-- mvn -o -f common\population\pom.xml exec:exec -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
	<version>${maven.plugin.version.exec}</version>
        <configuration>
          <executable>java</executable>
          <arguments>
            <argument>-Xms128m</argument>
            <argument>-Xmx128m</argument>
            <argument>-XX:NewRatio=3</argument>
            <argument>-XX:+PrintGCTimeStamps</argument>
            <argument>-XX:+PrintGCDetails</argument>
            <argument>-Xloggc:gc.log</argument>
            <argument>-classpath</argument>
            <classpath/>
            <argument>org.renci.epi.population.PopulationMain</argument>
          </arguments>
        </configuration>
      </plugin>




      <!-- mvn -o -f common\population\pom.xml scala:script -->
      <!-- 
      Resolving the geotools dependencies works in the main portion of the build.
      But in the context of the scala plugin, it fails. It appears that something 
      about the scala plugin redefines the jboss repository to a deprectead (and
      now defunct) value. At any rate, dependencies do not resolve, the build fails.

           jboss.releases (http://repository.jboss.org/maven2, releases)

      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
	<version>${maven.plugin.version.scala}</version>
	<configuration>
	  <checkMultipleScalaVersions>false</checkMultipleScalaVersions>
	  <scalaVersion>${scala.version}</scalaVersion>
	  <addToClasspath>${project.build.directory}/classes</addToClasspath>
	  <script>
	    import org.renci.epi.population.PopulationMain
	    println ("Hey")
	    try {
  	       val app = new PopulationMain 
	       app.compileModelInput ()
	    } catch {
	       case e: Exception => 
                  e.printStackTrace ()
            }
	  </script>
	</configuration>
        <dependencies>
          <dependency>
	    <groupId>org.scala-lang</groupId>
	    <artifactId>scala-library</artifactId>
	    <version>${scala.version}</version>
	  </dependency>
	  <dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-jdbc</artifactId>
	    <version>${org.springframework.version}</version>
	  </dependency>

	  <dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-jdbc</artifactId>
	    <version>${org.springframework.version}</version>
	  </dependency>    
	  <dependency>
	    <groupId>net.sf.opencsv</groupId>
	    <artifactId>opencsv</artifactId>
	    <version>${net.sf.opencsv.version}</version>
	  </dependency>

	  <dependency>
	    <groupId>${project.groupId}</groupId>
	    <artifactId>util</artifactId>
	    <version>${project.version}</version>
	  </dependency>    
	  <dependency>
	    <groupId>${project.groupId}</groupId>
	    <artifactId>geography</artifactId>
	    <version>${project.version}</version>
	  </dependency>    

        </dependencies>
      </plugin>
      -->      
      
   </plugins>
  </build>

</project>
